name: Build & Deploy Android to Play Store

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build_android_app:
    name: Build Android App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn' # or 'npm' if you use npm

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: yarn install --frozen-lockfile # or npm ci

      - name: Setup EAS CLI
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build Android AAB
        run: eas build --platform android --profile production --non-interactive

      - name: Upload Android AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-app-bundle
          path: build/*.aab # Adjust path if your build output differs

  deploy_to_play_store:
    name: Deploy to Google Play Store
    runs-on: ubuntu-latest
    needs: build_android_app # Ensures this job runs only after build_android_app completes successfully

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Android AAB artifact
        uses: actions/download-artifact@v4
        with:
          name: android-app-bundle

      - name: Create Google Play Service Account Key file
        run: echo "${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_KEY }}" > google-play-key.json
        shell: bash

      - name: Setup EAS CLI
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Submit to Google Play Store
        run: eas submit --platform android --latest --key google-play-key.json --non-interactive --track internal
        # --track internal: You can change this to 'alpha', 'beta', or 'production' as needed.
        # --latest: Submits the latest successful build from EAS
