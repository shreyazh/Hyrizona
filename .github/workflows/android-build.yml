name: Build & Deploy Android AAB

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Install project dependencies
        run: npm install

      - name: Trigger Android AAB build on EAS (non-blocking)
        run: |
          set -euxo pipefail
          echo "Starting EAS Android AAB build..."
          eas build --platform android --profile production --non-interactive

      - name: Wait and Download Latest Finished Android AAB (max 30 min)
        run: |
          set -euxo pipefail

          echo "Waiting for EAS build to complete..."

          timeout 30m bash -c '
            until eas build:list --platform android --status finished --limit 1 --json --non-interactive | jq -e ".[0].artifacts.buildUrl" > /dev/null; do
              echo "Still waiting for build to finish..."
              sleep 60
            done
          '

          echo "Fetching build URL..."
          EAS_BUILD_LIST_OUTPUT=$(eas build:list --platform android --status finished --limit 1 --json --non-interactive)
          BUILD_URL=$(echo "$EAS_BUILD_LIST_OUTPUT" | jq -r '.[0].artifacts.buildUrl')

          if [ -z "$BUILD_URL" ]; then
            echo "Error: Build URL not found."
            exit 1
          fi

          mkdir -p aab_output
          curl -o aab_output/app.aab "$BUILD_URL"
          echo "âœ… AAB downloaded to aab_output/app.aab"

      - name: Upload AAB to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          packageName: com.aimatrix
          releaseFiles: aab_output/app.aab
          track: production